# Name: Joanna Choi
# VUNET ID: choije
# Class: SC3250
# Assignment: #3


import matplotlib.pyplot as plt
import scipy.signal as S
import numpy as N
from scipy import signal
from scipy import ndimage


def normalize(image):
    img_data = image.astype(N.float32)
    img_mean = N.mean(img_data)
    return img_data / img_mean


def convolution(image):
    fig = plt.figure()
    plt.set_cmap('gray')
    img1 = fig.add_subplot(1, 3, 1)
    img1.set_title("Original")
    img1.axes.get_xaxis().set_visible(False)
    img1.axes.get_yaxis().set_visible(False)
    image = normalize(image)
    img1.imshow(image)
    horizontal = S.convolve(image, [[1.], [-1.]])
    vertical = S.convolve(image, [[1., -1.]])
    img2 = fig.add_subplot(1, 3, 2)
    img2.set_title("Horizontal")
    img2.axes.get_xaxis().set_visible(False)
    img2.axes.get_yaxis().set_visible(False)
    img2.imshow(horizontal)
    img3 = fig.add_subplot(1, 3, 3)
    img3.set_title("Vertical")
    img3.axes.get_xaxis().set_visible(False)
    img3.axes.get_yaxis().set_visible(False)
    img3.imshow(vertical)
    plt.show()


def filter(image):
    fig = plt.figure()
    box = (1/18)*N.array([[2, 2, 2], [2, 2, 2], [2, 2, 2]])
    box = normalize(box)
    tent = (1/16)*N.array([[1, 2, 1], [2, 4, 2], [1, 2, 1]])
    laplacian = N.array([[-1, -1, -1], [-1, 9, -1], [-1, -1, -1]])
    sharpen = N.array([[-1, -2, -1], [-2, 13, -2], [-1, -2, -1]])
    img1 = fig.add_subplot(3, 4, 1)
    img1.imshow(image)
    img1.set_title("Original")
    img1.axes.get_xaxis().set_visible(False)
    img1.axes.get_yaxis().set_visible(False)
    img1.imshow(image)
    box_img = signal.convolve2d(image, box, mode='same', boundary='symm')
    img2 = fig.add_subplot(3, 4, 2)
    img2.set_title("5x5 Box")
    img2.axes.get_xaxis().set_visible(False)
    img2.axes.get_yaxis().set_visible(False)
    img2.imshow(box_img)
    tent_img = signal.convolve2d(image, tent, mode='same', boundary='symm')
    img3 = fig.add_subplot(3, 4, 3)
    img3.set_title("3x3 Box")
    img3.axes.get_xaxis().set_visible(False)
    img3.axes.get_yaxis().set_visible(False)
    img3.imshow(tent_img)
    lap_img = signal.convolve2d(image, laplacian, mode='same', boundary='symm')
    img4 = fig.add_subplot(3, 4, 4)
    img4.set_title("Laplacian")
    img4.axes.get_xaxis().set_visible(False)
    img4.axes.get_yaxis().set_visible(False)
    img4.imshow(lap_img)
    sharp_img = signal.convolve2d(image, sharpen, mode='same', boundary='symm')
    img5 = fig.add_subplot(3, 4, 5)
    img5.set_title("Sharpen")
    img5.axes.get_xaxis().set_visible(False)
    img5.axes.get_yaxis().set_visible(False)
    img5.imshow(sharp_img)
    gauss_fil = ndimage.gaussian_filter(image, 1)
    img6 = fig.add_subplot(3, 4, 6)
    img6.set_title("Gauss Filter:1")
    img6.axes.get_xaxis().set_visible(False)
    img6.axes.get_yaxis().set_visible(False)
    img6.imshow(gauss_fil)
    gauss_fil1 = ndimage.gaussian_filter(image, 7)
    img7 = fig.add_subplot(3, 4, 7)
    img7.set_title("Gauss Filter:7")
    img7.axes.get_xaxis().set_visible(False)
    img7.axes.get_yaxis().set_visible(False)
    img7.imshow(gauss_fil1)
    med_fil = ndimage.median_filter(image, 4)
    img8 = fig.add_subplot(3, 4, 8)
    img8.set_title("Median Filter")
    img8.axes.get_xaxis().set_visible(False)
    img8.axes.get_yaxis().set_visible(False)
    img8.imshow(med_fil)
    lap_fil = ndimage.laplace(image)
    img9 = fig.add_subplot(3, 4, 9)
    img9.set_title("Laplace")
    img9.axes.get_xaxis().set_visible(False)
    img9.axes.get_yaxis().set_visible(False)
    img9.imshow(lap_fil)
    gauss_lap = ndimage.gaussian_laplace(image, 1)
    img10 = fig.add_subplot(3, 4, 10)
    img10.set_title("Gauss Laplace:1")
    img10.axes.get_xaxis().set_visible(False)
    img10.axes.get_yaxis().set_visible(False)
    img10.imshow(gauss_lap)
    gauss_lap1 = ndimage.gaussian_laplace(image, 7)
    img11 = fig.add_subplot(3, 4, 11)
    img11.set_title("Gauss Laplace:7")
    img11.axes.get_xaxis().set_visible(False)
    img11.axes.get_yaxis().set_visible(False)
    img11.imshow(gauss_lap1)
    sobel = ndimage.sobel(image)
    img12 = fig.add_subplot(3, 4, 12)
    img12.set_title("Sobel")
    img12.axes.get_xaxis().set_visible(False)
    img12.axes.get_yaxis().set_visible(False)
    img12.imshow(sobel)
    plt.show()
